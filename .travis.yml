sudo: required
dist: trusty
group: deprecated-2017Q4

language: python

python:
  - "3.6"

env:
  - SCIDB_VER=19.11 BUILD_IMG=-xenial

services:
  - docker

before_install:
  - wget --no-verbose --output-document -
    https://github.com/Paradigm4/accelerated_io_tools/archive/v${SCIDB_VER}.tar.gz
    | tar --extract --gzip --directory=.

  - wget --no-verbose --output-document -
    https://github.com/Paradigm4/superfunpack/archive/master.tar.gz
    | tar --extract --gzip --directory=.

  - docker pull rvernica/scidb:${SCIDB_VER}${BUILD_IMG}
  - docker run
    --name scidb
    --detach
    --volume /dev/shm
    --tmpfs /dev/shm
    --volume `pwd`:/shim
    --publish 8080:8080
    rvernica/scidb:${SCIDB_VER}${BUILD_IMG}
  - while ! curl http://localhost:8080/version; do sleep 1; done
  - docker exec scidb service shimsvc stop

install:
  - docker exec scidb bash -c
    "echo 'deb https://downloads.paradigm4.com/ extra/${SCIDB_VER}/ubuntu16.04/' >> /etc/apt/sources.list.d/scidb.list"

  - docker exec scidb apt-get update
  - docker exec scidb apt-get install
    --assume-yes
    --no-install-recommends
    bc
    busybox-syslogd
    curl
    libarrow-dev=0.9.0-1
    libpcre3-dev
    libpqxx-dev

  - docker exec scidb make --directory=/shim/accelerated_io_tools-${SCIDB_VER}
  - docker exec scidb cp
    /shim/accelerated_io_tools-${SCIDB_VER}/libaccelerated_io_tools.so
    /opt/scidb/${SCIDB_VER}/lib/scidb/plugins/
  - docker exec scidb iquery --afl --query "load_library('accelerated_io_tools')"

  - docker exec scidb make --directory=/shim/superfunpack-master
  - docker exec scidb cp
    /shim/superfunpack-master/libsuperfunpack.so
    /opt/scidb/${SCIDB_VER}/lib/scidb/plugins/
  - docker exec scidb iquery --afl --query "load_library('superfunpack')"

  - docker exec scidb ln --symbolic
    /opt/scidb/${SCIDB_VER}/lib/libscidbclient.so /lib/
  - docker exec scidb make --directory=/shim install
  # - docker exec scidb /sbin/syslogd -n -S -O /dev/stdout &
  - pip install --upgrade -r tests/pytest/requirements.txt

script:
  - docker exec scidb make --directory=/shim test
  - docker exec scidb /shim/shim start
  - pytest tests/pytest/test_sessions.py
  - pytest -n 2 tests/pytest/test_sessions_multi.py

after_failure:
  - docker logs scidb
